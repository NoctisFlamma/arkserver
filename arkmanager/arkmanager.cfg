### arkmanager.cfg

arkstChannel="master"                                                                               # Git branch in above ${arkstGithubRepoOverride} repository
install_bindir="/usr/bin"                                                                           # Set by installer to directory containing installed executable.
install_libexecdir="/usr/libexec/arkmanager"                                                        # Set by installer to directory containing installed miscellaneous executables.
install_datadir="/usr/share/arkmanager"                                                             # Set by installer to directory containing installed miscellaneous data.


## SteamCMD Configuration

steamcmdroot="/home/steam/.steam/steamcmd"                                                          # Path to SteamCMD directory - change this to "/usr/games" on Debian/Ubuntu/CentOS if you have the steamcmd package installed.
steamcmdexec="steamcmd.sh"                                                                          # Name of SteamCMD executable - change this to "steamcmd" on Debian/Ubuntu/CentOS if you have the steamcmd package installed.
steamcmd_user="steam"                                                                               # User under which this script should be run.
steamcmd_appinfocache="/home/steam/.steam/appcache/appinfo.vdf"                                     # Path to SteamCMD AppInfo cache (appinfo.vdf) - change this to "/home/steam/.steam/appcache/appinfo.vdf" on Debian/Ubuntu/CentOS if you have the steamcmd package installed.
steamcmd_workshoplog="/home/steam/.steam/logs/workshop_log.txt"                                     # Path to SteamCMD Workshop log (workshop_log.txt) - change this to "/home/steam/.steam/logs/workshop_log.txt" on Debian/Ubuntu/CentOS if you have the steamcmd package installed.


## ARK server global config

arkserverroot="/ark/server"                                                                         # path of your ARK server files (default ~/ARK)
arkserverexec="ShooterGame/Binaries/Linux/ShooterGameServer"                                        # Path of server executable relative to ${arkserverroot}
arkbackupdir="/ark/backup"                                                                          # Path in which to store ARK server backups
arkbackupcompress="true"                                                                            # Compress ARK server backups - true to enable, false to disable
arkNoPortDecrement="true"                                                                           # Disable old Port - 1 behaviour - true to disable behaviour, false to use old behaviour
arkautorestartfile="ShooterGame/Saved/.autorestart"                                                 # Auto-restart file path relative to ${arkserverroot} - used to signal if server should be automatically restarted if it exits
arkAutoUpdateOnStart="${am_arkAutoUpdateOnStart}"                                                   # Update ARK server before startup - true to enable, false to disable
arkBackupPreUpdate="${am_arkBackupPreUpdate}"                                                       # Backup ARK server config and save before updating - true to enable, false to disable

# SteamCMD staging directory - used to enable updates to be fully downloaded before restarting the server (reduces downtime while updating).
# Also used for reducing disk space used by multiple instances
arkStagingDir="/ark/staging"

# Maximum delay before starting next instance - 0 or unset for no delay
arkStartDelay=20

# Same as above, for v1.6.43 compatibility
defaultinstance_max=20

## Options to automatically remove old backups to keep backup size in check
## Each compressed backup is generally about 1-2MB in size.
arkMaxBackupSizeMB="${am_MaxBackupSizeMB}"                                                          # Maximum backup directory usage in Megabytes - old backups will be deleted to keep the backup directory usage below this size
#arkMaxBackupSizeGB="2"                                                                             # Maximum backup directory usage in whole Gigabytes - alternative for above ${arkMaxBackupSizeMB}


## Shutdown warnings
arkwarnminutes="${am_arkwarnminutes}"                                                               # Number of minutes to warn players when using --warn
arkprecisewarn="false"                                                                              # Obey ${arkwarnminutes} even if no players are connected - true to enable, false to disable


## Warning messages
## Modify as desired, putting the %d replacement operator where the number belongs
msgWarnUpdateMinutes="This ARK server will shutdown for an update in %d minutes"                    # Message template when updating with 1 or more minutes remaining
msgWarnUpdateSeconds="This ARK server will shutdown for an update in %d seconds"                    # Message template when updating with less than 1 minute remaining
msgWarnRestartMinutes="This ARK server will shutdown for a restart in %d minutes"                   # Message template when restarting with 1 or more minutes remaining
msgWarnRestartSeconds="This ARK server will shutdown for a restart in %d seconds"                   # Message template when restarting with less than 1 minute remaining
msgWarnShutdownMinutes="This ARK server will shutdown in %d minutes"                                # Message template when shutting down with 1 or more minutes remaining
msgWarnShutdownSeconds="This ARK server will shutdown in %d seconds"                                # Message template when shutting down with less than 1 minute remaining
msgWarnCancelled="Restart cancelled by player request"                                              # Message when update / restart / shutdown cancelled by player request
msgUpdateCancelled="Shutdown cancelled by operator (%s)"                                            # Message when update / restart / shutdown cancelled by operator
broadcastcmd="broadcast"                                                                            # RCON command to use for broadcast command

## Notifications

discordWebhookURL="${am_discordWebhookURL}"                                                         # Discord Webhook URL
notifyMsgShuttingDown="Shutting down"                                                               # Notify template {msg} when shutting down
notifyMsgStarting="Starting"                                                                        # Notify template {msg} when starting
notifyMsgServerUp="Server is up"                                                                    # Notify template {msg} when server is up
notifyMsgStoppedListening="Server has stopped listening - restarting"                               # Notify template {msg} when server has stopped listening
notifyMsgServerTerminated="Server exited - restarting"                                              # Notify template {msg} when server has unexpectedly exited
msgReasonUpdateApp="for an update to the game"                                                      # {reason} template used for app-only updates
msgReasonUpdateMod="for an update to mod(s) {modnamesupdated}"                                      # {update} template used for mod-only updates       {modnames} is replaced with names of mods updated
msgReasonUpdateAppMod="for an update to the game and an update to mod(s) {modnamesupdated}"         # {update} template used for app and mod updates    {modnames} is replaced with names of mods updated
msgReasonRestart="for a server restart"                                                             # {update} template used for restarts
msgReasonShutdown=""                                                                                # {update} template used for shutdown


# Notification template
# {instance} is replaced with instance name
# {server} is replaced with server name
# {msg} is replaced with template {msg} above
notifyTemplate="Message from instance {instance} on server {server}: {msg}"
noNotifyWarn=true                                                                                   # Disable sending update / shutdown / restart warnings via notifications
chatCommandRestartCancel="/cancelupdate"                                                            # Chat message players can use to cancel update / restart

ark_SessionName="${am_ark_SessionName}"                                                                  # Server Name - this is the name that appears in the server browser.
serverMap="${am_serverMap}"                                                                               # Server map
#serverMapModId="469987622"                                                                         # Server map mod Id (<fileid> in http://steamcommunity.com/sharedfiles/filedetails/?id=<fileid>) - alternative to above ${serverMap}


## ARK server common options - use ark_<optionname>=<value>
## comment out these values if you want to define them
## inside your GameUserSettings.ini file
## This is not an exhaustive list of options

#ark_TotalConversionMod="496735411"                                                                 # Total Conversion Mod Id
ark_RCONEnabled="True"                                                                              # Enable RCON
ark_ServerPassword="${am_ark_ServerPassword}"                                                       # ARK server password, empty: no password required to login
ark_ServerAdminPassword="${am_ark_ServerAdminPassword}"                                             # ARK server admin password
ark_MaxPlayers="${am_ark_MaxPlayers}"                                                               # Maximum player connection count
#ark_GameModIds=""                                                                                  # Additional game Mod Ids, comma separated


## ARK server flags - use arkflag_<optionname>=true
## These are only examples - this is not an exhaustive list of options

arkflag_OnlyAdminRejoinAsSpectator=true                                                             # Only allow admins to rejoin as spectator
arkflag_DisableDeathSpectator=true                                                                  # Disallow players from becoming spectators when they die
#arkflag_automanagedmods=                                                                           # ARK server manages mods itself
#arkflag_crossplay="${am_arkflag_crossplay}"                                                         # Enable crossplay between Steam and Epic players - mods cannot be used
#arkflag_NoBattlEye="${am_arkflag_NoBattlEye}"
#arkflag_epiconly="false"                                                                            # Enable Epic connections only - mods cannot be used


## ARK server options - i.e. for -optname=val, use arkopt_optname=val
## These are only examples - this is not an exhaustive list of options


logdir="/ark/log/"                                                                                  # Logs path (default /var/log/arktools)
appid=376030                                                                                        # ARK server Steam App ID
mod_appid=346110                                                                                    # Steam App ID for downloading mods
mod_branch=Windows                                                                                  # Mod OS Selection - should be Windows - Linux mods are known to be incompatible with the ARK server
#mod_branch_496735411=Windows                                                                       # Mod-specific OS selection
#nowarnmodbranch=                                                                                   # Specify that you understand the above warning about Linux mods, and want to use Linux mods anyway


defaultinstance="main"                                                                              # Default instance when no instance is specified when running commands
servicename="arkserv"                                                                               # Name of the service (don't change if you don't know what are you doing)


##Port Config
ark_RCONPort="${am_ark_RCONPort}"                                                                   # RCON Port - this must be unique for each game server running on the host
ark_Port="${am_ark_Port}"                                                                           # Game Port - this port and the port above / below it must be unique for each game server running on the host
ark_QueryPort="${am_ark_QueryPort}"                                                                 # Query Port - this port must be unique for each game server running on the host


progressDisplayType=spinner                                                                         # We don't use the dots because it doesn't show.
